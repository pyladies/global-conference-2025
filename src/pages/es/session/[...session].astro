---
import Container from "@components/container.astro";
import SpeakerData from "../../../data/speakers.json";
import Submissions from "../../../data/speakers_talks.json";
import Layout from "@layouts/Layout.astro";

import { getLangFromUrl, useTranslations } from "../../../i18n/utils";

const { session } = Astro.params;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const speakers = Object.entries(SpeakerData);
const submissions = Object.entries(Submissions);


export async function getStaticPaths() {
  return Object.values(Submissions).map(s => ({
    params: { session: s.slug },
  }));
}

---

<Layout title="Sessions">
  <Container>
    {
      submissions
        .filter(([key, value]) => value.slug === session)
        .map(([key, value]) => (
          <div class="my-12">
            <h1 class="text-4xl font-bold mb-4 text-pinkpyladies text-center">{value.title}</h1>
            
            <!-- Session details section -->
            <div class="mt-16">
              <div class="max-w-md xs:text-center">
                <div class="grid grid-cols-1 md:grid-cols-2 mt-6 gap-2 text-center md:text-left lg:text-left">
                { value.track &&
                ( 
                <p class="text-black dark:text-white font-bold">{t("session.track")}</p>
                <p class="text-black dark:text-white  break-normal whitespace-pre-wrap">{value.track}</p>)

              }
              { value.session_type &&
                ( <p class="text-black dark:text-white font-bold ">{t("session.type")}</p>
                <p class="text-black dark:text-white  break-normal whitespace-pre-wrap">{value.session_type}</p>)
              
              }
              { value.level &&
                ( 
                <p class="text-black dark:text-white font-bold">{t("session.level")}</p>
                <p class="text-black dark:text-white  break-normal whitespace-pre-wrap">{value.level}</p>)
              
              }
                { value.room &&
                ( 
                <p class="text-black dark:text-white font-bold">{t("session.room")}</p>
                <p class="text-black dark:text-white  break-normal whitespace-pre-wrap">{value.room}</p>)
              
              }
              
                { value.start &&
                ( 
                <p class="text-black dark:text-white font-bold">{t("session.start")}</p>
                <p class="text-black dark:text-white  break-normal whitespace-pre-wrap">{value.start}</p>)
              
              }
              
                { value.end &&
                ( 
                <p class="text-black dark:text-white font-bold">{t("session.end")}</p>
                <p class="text-black dark:text-white  break-normal whitespace-pre-wrap">{value.end}</p>)
              
              }
                { value.duration &&
                ( 
                <p class="text-black dark:text-white font-bold">{t("session.duration")}</p>
                <p class="text-black dark:text-white  break-normal whitespace-pre-wrap">{value.duration} {t("session.minutes")}</p>)
              
              }
              </div>
              
              </div>
              
            </div>


            <!--Abstract section -->
            <div class="mt-20">
              <h2 class="text-3xl font-bold text-black dark:text-white">{t("session.abstract")}</h3>
            <p class="mt-4 text-lg leading-relaxed dark:text-white mb-6">
              {value.abstract}
            </p>
            </div>
              
            <!--Speakers section -->
            <div class="mt-16">
  <h2 class="text-3xl font-bold mb-4 text-black dark:text-white">{t("session.speakers")}</h2>
              <ul>
                {
                  value.speakers.map((speakerId) => (
                    speakers.filter(([spkKey, spkValue]) => spkKey === speakerId).map(([spkKey, spkValue]) => (
                      <li class="mt-4 text-black dark:text-white">
                        <a class="text-xl font-semibold" href={"/en/speaker/"+spkValue.slug}>{spkValue.name}</a>
                      </li>)
                  )))
                }
              </ul>
            </div>
            

            <!-- Other sessions -->

            
          </div>
        ))
    }
  </Container>
</Layout>