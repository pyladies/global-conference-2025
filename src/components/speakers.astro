---
import { getLangFromUrl, useTranslations } from "../i18n/utils";
import Link from "./ui/link.astro";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { speakerInfo, speakerSubmissions } = Astro.props;

// const speakers = Object.entries(speakerData);

const socials = {
  linkedin: {
    title: "LinkedIn",
    svgpath: `<path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z" id="path1" style="fill:#ee264d;fill-opacity:1" />`,
  },
  twitter: {
    title: "X (Twitter)",
    svgpath: `<path d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z" id="path1" style="fill:#ee264d;fill-opacity:1" />`,
  },
};
---

<!-- 
  <div class="mx-auto mt-16 max-w-2xl sm:mt-20 lg:mt-24 lg:max-w-none">
    <dl class="grid max-w-xl grid-cols-1 gap-x-8 gap-y-4 lg:max-w-none lg:grid-cols-3">
      <div class="flex flex-col p-4">
            
    </dl>
</div> -->
      
                <div class="flex flex-col p-4">
<dt
  class="block items-center gap-x-3 text-base font-semibold leading-7 text-black dark:text-white"
>
  <!-- Speaker Pic -->
  <div class="flex justify-center">
    <img
      class="w-40 h-40 rounded-full flex self-center"
      src={speakerInfo.avatar || "../images/logo.svg"}
      loading="lazy"
    />
  </div>
  <!-- Speaker Links -->
  <div class="font-medium items-center block text-black dark:text-white">
    <div class="text-center text-xl">{speakerInfo.name}</div>
    <div class="text-center font-light italic">{speakerInfo.affiliation}</div>
    <div class="flex justify-center mt-4">
      <div class="flex text-black dark:text-white content-center">
        {
          speakerInfo.linkedin_url && (
            <a
              class="duration-300 hover:text-gray-900 dark:hover:text-gray-100 pr-3"
              href={speakerInfo.linkedin_url}
              title={socials.linkedin.title}
              target="blank"
              aria-label={socials.linkedin.title}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                class="m-auto h-5 w-5"
                viewBox="0 0 32 32"
                set:html={socials.linkedin.svgpath}
              />
            </a>
          )
        }
        {
          speakerInfo.bluesky_url && (
            <a
              class="duration-300 hover:text-gray-900 dark:hover:text-gray-100"
              href={speakerInfo.bluesky_url}
              title={socials.twitter.title}
              target="blank"
              aria-label={socials.twitter.title}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                class="m-auto h-5 w-5"
                viewBox="0 0 32 32"
                set:html={socials.twitter.svgpath}
              />
            </a>
          )
        }
      </div>
    </div>
  </div>
</dt>
<!-- Speaker Bio -->
<dd
  class="mt-4 flex flex-col text-center leading-7 text-gray-900 dark:text-gray-100"
>
  <p class="flex-auto">{speakerInfo.biography}</p>
</dd>
<!-- Speaker Talks -->

<div class="mt-4 border-t">
  <div
    class="text-sm font-semibold text-gray-900 dark:text-white mt-4 mb-2 text-center"
  >
    {t("speakers.talks")}
  </div>
  <div class="space-y-4">
    {
      speakerSubmissions.forEach((sub) => (
        <div class="p-4 border rounded-lg">
          <div class="text-base font-semibold text-gray-900 dark:text-white">
            {sub.title}
          </div>
          <div class="text-sm font-bold dark:text-white">
            Language:{" "}
            <span class="text-sm font-light dark:text-white">
              {sub.language.toUpperCase()}
            </span>
          </div>
          <div class="text-sm font-bold dark:text-white">
            Timezone:{" "}
            <span class="text-sm font-light dark:text-white">
              {speakerInfo.timezone}
            </span>
          </div>
          <div class="text-sm font-bold dark:text-white">
            Duration:{" "}
            <span class="text-sm font-light dark:text-white">
              {sub.duration}"
            </span>
          </div>
          <div class="text-sm font-bold dark:text-white">
            Level:{" "}
            <span class="text-sm font-light dark:text-white">{sub.level}</span>
          </div>
          {sub.website_url && (
            <div class="mt-4 flex content-center flex-wrap justify-center">
              <Link
                href={sub.website_url}
                style="outline"
                class="text-sm hover:border-pink"
              >
                {t("speakers.view_details")}
              </Link>
            </div>
          )}
        </div>
      ))
    }
  </div>
</div>

                </div>
